openapi: 3.0.4 # TODO: Discuss the leaderboard API (Should usernames be returned instead of playerslots?)
info:
  title: Quackbox API
  description: |-
    This is the API documentation for the Quackbox local web server based on the OpenAPI 3.0 specification.

    Some useful links:
    - [Quackbox GitHub Repository](https://github.com/rit-coms/COMS-Console)
    - [The source API definition for the Quackbox](https://github.com/rit-coms/COMS-Console/tree/dev/zudoku-docs/quackbox-api-docs/apis)
  contact:
    email: coms@rit.edu
    name: Computing Organization for Multicultural Students
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: http://localhost:6174/api/v2
tags:
  - name: Leaderboard
    description: Access to leaderboard data
  - name: Save Data
    description: Read and write save data
paths:
  /save-data:
    get:
      tags:
        - Save Data
      summary: Retrieve save data
      description: Retrieve the save data for the current user. This will return a list of JSON objects with the save data.
      operationId: getSaveData
      parameters:
        - $ref: "#/components/parameters/player_slot"
        - $ref: "#/components/parameters/regex"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SaveDataEntry"
        "400":
          $ref: "#/components/responses/BadRequest"
  /save-data/{file_name}:
    get:
      tags:
        - Save Data
      summary: Retrieve a specific file
      description: Retrieve a specific save data file for the current user. This will return a JSON object with the save data.
      operationId: getSaveDataFile
      parameters:
        - $ref: "#/components/parameters/save_file_name"
        - $ref: "#/components/parameters/player_slot"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveDataEntry"
        "400":
          $ref: "#/components/responses/BadRequest"
    put:
      tags:
        - Save Data
      summary: Create or update save data
      description: Create or update the save data for the current user with the data contained within the request body. This will create a new save data entry or update an existing one with the same file name.
      operationId: createOrUpdateSaveData
      parameters:
        - $ref: "#/components/parameters/save_file_name"
        - $ref: "#/components/parameters/player_slot"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              description: Any JSON object to be stored as save data.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveDataEntry"
        "400":
          $ref: "#/components/responses/BadRequest"
  /leaderboard:
    get:
      tags:
        - Leaderboard
      summary: Retrieve leaderboard data
      description: Retrieve the leaderboard data from all users. This will return a list of JSON objects with the leaderboard data.
      operationId: getLeaderboard
      parameters:
        - $ref: "#/components/parameters/player_slot"
        - $ref: "#/components/parameters/leaderboard_count"
        - $ref: "#/components/parameters/leaderboard_offset"
        - $ref: "#/components/parameters/leaderboard_value_name"
        - $ref: "#/components/parameters/leaderboard_ascending"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LeaderboardEntry"
        "400":
          $ref: "#/components/responses/BadRequest"

components:
  schemas:
    SaveDataEntry:
      type: object
      properties:
        data:
          type: object
          additionalProperties: true
          description: The save data for the current user. This will be a JSON object with the save data as defined by the game developer.
        time_stamp:
          type: string
          format: date-time
          description: The time stamp of the save data entry.
        file_name:
          type: string
          description: The file name of the save data entry.
    LeaderboardEntry:
      type: object
      properties:
        value_name:
          type: string
          description: The name of the leaderboard value. This is the title that should be displayed on the leaderboard.
        value_num:
          type: number
          description: The value of the leaderboard entry. This is the score or other value that is being tracked on the leaderboard.
        user_name:
          type: string
          description: The name of the user who achieved this score.
  parameters:
    player_slot:
      name: player_slot
      in: query
      description: The player slot (1-8) to retrieve data for. If not specified, the data for player 1 will be returned.
      required: false
      schema:
        type: integer
        default: 1
        example: 7
    regex:
      name: regex
      in: query
      description: A regular expression to filter the save data. Only save data that matches the regex will be returned.
      required: false
      schema:
        type: string
        format: pattern
        default: "^.*$"
        example: "rege(x(es)?|xps?)"
    save_file_name:
      name: file_name
      in: path
      description: The file name of the save data entry to retrieve.
      required: true
      schema:
        type: string
        example: "main_save"
    leaderboard_count:
      name: count
      in: query
      description: The number of leaderboard entries to retrieve. If not specified, the default is 100.
      required: false
      schema:
        type: integer
        default: 100
        example: 5
    leaderboard_offset:
      name: offset
      in: query
      description: The offset for the leaderboard entries to retrieve. This is used for pagination. If not specified, the default is 0.
      required: false
      schema:
        type: integer
        default: 0
        example: 10
    leaderboard_value_name:
      name: value_name
      in: query
      description: The name of the leaderboard value to retrieve.
      required: true
      schema:
        type: string
        example: "score"
    leaderboard_ascending:
      name: ascending
      in: query
      description: Whether to sort the leaderboard entries in ascending order. If not specified, the default is false.
      required: false
      schema:
        type: boolean
        default: false
        example: true
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Bad request"
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not found"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
